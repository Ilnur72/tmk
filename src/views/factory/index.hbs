<div
  class="md:max-w-auto min-h-screen min-w-0 max-w-full flex-1 rounded-[30px] bg-slate-100 px-4 pb-10 before:block before:h-px before:w-full before:content-[''] dark:bg-darkmode-700 md:px-[22px]">
  <!-- BEGIN: Top Bar -->

  <!-- END: Top Bar -->
  <div class='grid grid-cols-12 gap-6'>
    <div class='col-span-12 mt-8'>
      <div class='intro-y flex h-10 items-center justify-between'>
        <h2 class='mr-5 truncate text-lg font-medium'>Инвестиция лойиҳалари
          ҳолати мониторинги</h2>
        <button id="create-factory-btn" data-tw-toggle='modal' data-tw-target='#factory-create-modal' onclick="createFactory()" class="bg-primary hover:opacity-70 text-white font-bold py-2 px-4 rounded">
          Create Factory
        </button>
        {{!-- <a class='ml-auto flex items-center text-primary' href=''>
          <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
            stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
            data-lucide='refresh-ccw' class='lucide lucide-refresh-ccw stroke-1.5 mr-3 h-4 w-4'>
            <path d='M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8'></path>
            <path d='M3 3v5h5'></path>
            <path d='M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16'></path>
            <path d='M16 16h5v5'></path>
          </svg>
          Reload Data
        </a> --}}
      </div>
      <div class='mt-5 grid grid-cols-12 gap-6'>
        <div class='intro-y col-span-12 sm:col-span-6 xl:col-span-3'>
          <div
            class="relative zoom-in before:box before:absolute before:inset-x-3 before:mt-3 before:h-full before:bg-slate-50 before:content-['']">
            <div class='box p-5'>
              <div class='flex'>
                <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                  stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                  data-lucide='shopping-cart'
                  class='lucide lucide-shopping-cart stroke-1.5 h-[28px] w-[28px] text-primary'>
                  <circle cx='8' cy='21' r='1'></circle>
                  <circle cx='19' cy='21' r='1'></circle>
                  <path d='M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12'></path>
                </svg>
                <div class='ml-auto'>
                  <div data-placement='top'
                    class='tooltip cursor-pointer flex items-center rounded-full bg-success py-[3px] pl-2 pr-1 text-xs font-medium text-white'>
                    33%
                    <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                      stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                      data-lucide='chevron-up' class='lucide lucide-chevron-up stroke-1.5 ml-0.5 h-4 w-4'>
                      <path d='m18 15-6-6-6 6'></path>
                    </svg>
                  </div>
                </div>
              </div>
              <div class='mt-6 text-3xl font-medium leading-8'>{{total}}</div>
              <div class='mt-1 text-base text-slate-500'>Жами лойиҳалар</div>
            </div>
          </div>
        </div>
        <div class='intro-y col-span-12 sm:col-span-6 xl:col-span-3'>
          <div
            class="relative zoom-in before:box before:absolute before:inset-x-3 before:mt-3 before:h-full before:bg-slate-50 before:content-['']">
            <div class='box p-5'>
              <div class='flex'>
                 <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                  stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                  data-lucide='monitor' class='lucide lucide-monitor stroke-1.5 h-[28px] w-[28px] text-warning'>
                  <rect width='20' height='14' x='2' y='3' rx='2'></rect>
                  <line x1='8' x2='16' y1='21' y2='21'></line>
                  <line x1='12' x2='12' y1='17' y2='21'></line>
                </svg>
                <div class='ml-auto'>
                  <div data-placement='top'
                    class='tooltip cursor-pointer flex items-center rounded-full bg-success py-[3px] pl-2 pr-1 text-xs font-medium text-white'>
                    22%
                    <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                      stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                      data-lucide='chevron-up' class='lucide lucide-chevron-up stroke-1.5 ml-0.5 h-4 w-4'>
                      <path d='m18 15-6-6-6 6'></path>
                    </svg>
                  </div>
                </div>
              </div>
              <div class='mt-6 text-3xl font-medium leading-8'>{{this.counts.registrationCount}}</div>
              <div class='mt-1 text-base text-slate-500'>
                Расмийлаштириш жараёнида
              </div>
            </div>
          </div>
        </div>
        <div class='intro-y col-span-12 sm:col-span-6 xl:col-span-3'>
          <div
            class="relative zoom-in before:box before:absolute before:inset-x-3 before:mt-3 before:h-full before:bg-slate-50 before:content-['']">
            <div class='box p-5'>
              <div class='flex'>
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" 
                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                stroke-linecap="round" stroke-linejoin="round" 
                class="lucide lucide-construction-icon lucide-construction text-success">
                  <rect x="2" y="6" width="20" height="8" rx="1"/>
                  <path d="M17 14v7"/><path d="M7 14v7"/>
                  <path d="M17 3v3"/><path d="M7 3v3"/>
                  <path d="M10 14 2.3 6.3"/>
                  <path d="m14 6 7.7 7.7"/><path d="m8 6 8 8"/>
                </svg>
                <div class='ml-auto'>
                  <div data-placement='top'
                    class='tooltip cursor-pointer flex items-center rounded-full bg-success py-[3px] pl-2 pr-1 text-xs font-medium text-white'>
                    12%
                    <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                      stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                      data-lucide='chevron-up' class='lucide lucide-chevron-up stroke-1.5 ml-0.5 h-4 w-4'>
                      <path d='m18 15-6-6-6 6'></path>
                    </svg>
                  </div>
                </div>
              </div>
              <div class='mt-6 text-3xl font-medium leading-8'>{{this.counts.constructionCount}}</div>
              <div class='mt-1 text-base text-slate-500'>
                Қурилиш жараёнида
              </div>
            </div>
          </div>
        </div>
        <div class='intro-y col-span-12 sm:col-span-6 xl:col-span-3'>
          <div
            class="relative zoom-in before:box before:absolute before:inset-x-3 before:mt-3 before:h-full before:bg-slate-50 before:content-['']">
            <div class='box p-5'>
              <div class='flex'>
                <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                  stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                  data-lucide='credit-card' class='lucide lucide-credit-card stroke-1.5 h-[28px] w-[28px] text-pending'>
                  <rect width='20' height='14' x='2' y='5' rx='2'></rect>
                  <line x1='2' x2='22' y1='10' y2='10'></line>
                </svg>
                <div class='ml-auto'>
                  <div data-placement='top'
                    class='tooltip cursor-pointer flex items-center rounded-full bg-danger py-[3px] pl-2 pr-1 text-xs font-medium text-white'>
                    2%
                    <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                      stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                      data-lucide='chevron-down' class='lucide lucide-chevron-down stroke-1.5 ml-0.5 h-4 w-4'>
                      <path d='m6 9 6 6 6-6'></path>
                    </svg>
                  </div>
                </div>
              </div>
              <div class='mt-6 text-3xl font-medium leading-8'>{{this.counts.startedCount}}</div>
              <div class='mt-1 text-base text-slate-500'>Ишга тушганлари</div>
            </div>
          </div>
        </div>

      </div>

      <div class='mt-5 grid grid-cols-12 gap-6'>

        <!-- BEGIN: Users Layout -->
        {{#each factories}}<div class='intro-y col-span-12 md:col-span-6 lg:col-span-4 xl:col-span-3'>
          <div class='box'>
            <div class='p-5'>
              <div
                class='image-fit h-40 overflow-hidden rounded-md before:absolute before:left-0 before:top-0 before:z-10 before:block before:h-full before:w-full before:bg-gradient-to-t before:from-black before:to-black/10 2xl:h-56'>
                <img class='rounded-md' src='../../../public/image/3.jpg' alt='' />

                  <div class="absolute right-2 top-1 z-10 left-auto"><a class='flex items-center text-danger' data-tw-toggle='modal' data-tw-target='#factory-edit-modal'
                    href='#' onclick='showFactoryEditModal({{this.id}})'>
                    <svg class="w-6 h-6 text-red dark:text-primary" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
  <path fill-rule="evenodd" d="M11.32 6.176H5c-1.105 0-2 .949-2 2.118v10.588C3 20.052 3.895 21 5 21h11c1.105 0 2-.948 2-2.118v-7.75l-3.914 4.144A2.46 2.46 0 0 1 12.81 16l-2.681.568c-1.75.37-3.292-1.263-2.942-3.115l.536-2.839c.097-.512.335-.983.684-1.352l2.914-3.086Z" clip-rule="evenodd"/>
  <path fill-rule="evenodd" d="M19.846 4.318a2.148 2.148 0 0 0-.437-.692 2.014 2.014 0 0 0-.654-.463 1.92 1.92 0 0 0-1.544 0 2.014 2.014 0 0 0-.654.463l-.546.578 2.852 3.02.546-.579a2.14 2.14 0 0 0 .437-.692 2.244 2.244 0 0 0 0-1.635ZM17.45 8.721 14.597 5.7 9.82 10.76a.54.54 0 0 0-.137.27l-.536 2.84c-.07.37.239.696.588.622l2.682-.567a.492.492 0 0 0 .255-.145l4.778-5.06Z" clip-rule="evenodd"/>
</svg>
                    Edit
                  </a></div>
                <div class='absolute bottom-0 z-10 px-5 pb-6 text-white'>
                  <a class='block text-base font-medium' href=''>
                  </a>
                  {{this.name}}
                </div>
              </div>
              <div class='mt-5 text-slate-600 dark:text-slate-500'>

                <div class='p-5'>
                  <div class='preview relative [&amp;.hide]:overflow-hidden [&amp;.hide]:h-0'>
                    <div class='w-full bg-slate-200 rounded dark:bg-black/20 h-4 my-2'>
                      <div role='progressbar' aria-valuenow='0' aria-valuemin='0' aria-valuemax='100'
                        class='bg-primary h-full rounded text-xs text-white flex justify-center items-center w-50'>
                        {{this.work_persent}}%
                      </div>
                    </div>

                  </div>

                </div>
                {{!-- <button data-tw-toggle='modal' data-tw-target='#parameter-control-modal'
                  onclick="showParametrControlModal({{this.id}})"
                  class="p-1 rounded bg-primary text-white my-1">maydonlarni boshqarish</button> --}}

                {{#each this.factoryParams}}
                <div class="flex justify-between items-center mt-2">
                  <div
                  data-tw-toggle="modal" data-tw-target="#factory-history-modal" onclick="showCommentHistory({{this.id}})"
                  class='flex items-center cursor-pointer {{#unless this.visible}}hidden{{/unless}}'>
                  <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                    stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                    data-lucide='check-square' class='lucide lucide-check-square stroke-1.5 mr-2 h-4 w-4'>
                    <polyline points='9 11 12 14 22 4'></polyline>
                    <path d='M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11'></path>
                  </svg>
                  <div class="{{#if (eq this.param.type 'select')}}flex items-center{{/if}}">
  <span class="cursor-pointer" data-param-id="{{this.param.id}}">
    {{{this.param.name}}}:&nbsp;
  </span>
  
  {{#if (eq this.param.type "select")}}
    <!-- Select type - show status image -->
    <img id="{{this.id}}" 
         class="rounded-full"
         src="../../../public/image/{{#if (eq this.status 0)}}error{{else if (eq this.status 1)}}ok{{else}}{{this.status}}{{/if}}.png"
         alt="Status indicator"
         width="20" 
         height="20" />
  {{else if (eq this.param.type "date")}}
    <span id="factory-param-date-{{this.id}}" class="ml-1" {{#unless (and this.latestLog.value (gt (length this.latestLog.value) 2))}}style="display: none;"{{/unless}}>
  {{#if (and this.latestLog.value (gt (length this.latestLog.value) 2))}}
    {{this.latestLog.value}}
  {{/if}}
</span>
    {{/if}}
</div>
                </div>
         <button id="parameter-edit-btn" onclick="showParameterModal({{../this.id}}, {{this.param.id}}, '{{this.param.name}}', '{{this.param.type}}', {{this.id}}, {{this.status}})"> <svg class="w-6 h-6 text-primary dark:text-primary" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
  <path fill-rule="evenodd" d="M11.32 6.176H5c-1.105 0-2 .949-2 2.118v10.588C3 20.052 3.895 21 5 21h11c1.105 0 2-.948 2-2.118v-7.75l-3.914 4.144A2.46 2.46 0 0 1 12.81 16l-2.681.568c-1.75.37-3.292-1.263-2.942-3.115l.536-2.839c.097-.512.335-.983.684-1.352l2.914-3.086Z" clip-rule="evenodd"/>
  <path fill-rule="evenodd" d="M19.846 4.318a2.148 2.148 0 0 0-.437-.692 2.014 2.014 0 0 0-.654-.463 1.92 1.92 0 0 0-1.544 0 2.014 2.014 0 0 0-.654.463l-.546.578 2.852 3.02.546-.579a2.14 2.14 0 0 0 .437-.692 2.244 2.244 0 0 0 0-1.635ZM17.45 8.721 14.597 5.7 9.82 10.76a.54.54 0 0 0-.137.27l-.536 2.84c-.07.37.239.696.588.622l2.682-.567a.492.492 0 0 0 .255-.145l4.778-5.06Z" clip-rule="evenodd"/>
</svg></button>

                </div>
  
      <span 
  data-param-id="{{this.id}}"
  id="{{this.id}}"
  class="pl-2 text-xs {{#if (and latestLog.izoh (ne latestLog.izoh ""))}}{{#if this.visible}}flex{{else}}hidden{{/if}}{{else}}hidden{{/if}}"
  {{#unless (and latestLog.izoh (ne latestLog.izoh ""))}}aria-hidden="true"{{/unless}}>
  {{#if latestLog.izoh}}Izoh: {{latestLog.izoh}}{{/if}}
</span>
                <div class='mt-4 w-full {{#if this.visible}}flex{{/if}}hidden border-t border-slate-200/60 dark:border-darkmode-400'></div>{{/each}}
              </div>
            </div>
            <div
              class='flex items-center justify-center border-t border-slate-200/60 p-5 dark:border-darkmode-400 lg:justify-end'>
              <a class='mr-auto flex items-center text-primary' href='#'>
                <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                  stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                  data-lucide='eye' class='lucide lucide-eye stroke-1.5 mr-1 h-4 w-4'>
                  <path d='M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z'></path>
                  <circle cx='12' cy='12' r='3'></circle>
                </svg>
                Батафсил маълумот
              </a>
              {{!-- <a class='mr-3 flex items-center' href='#'>
                <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'
                  stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'
                  data-lucide='check-square' class='lucide lucide-check-square stroke-1.5 mr-1 h-4 w-4'>
                  <polyline points='9 11 12 14 22 4'></polyline>
                  <path d='M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11'></path>
                </svg>
                Маълумотларни янгилаш
              </a> --}}
              <button data-tw-toggle='modal' data-tw-target='#parameter-control-modal' onclick="showParametrControlModal({{this.id}})" class="text-primary"> <svg
    xmlns="http://www.w3.org/2000/svg"
    width="20"
    height="20"
    fill="none"
    viewBox="0 0 24 24"
    class="mr-2"
  >
    <rect x="3" y="5" width="14" height="2" rx="1" fill="currentColor" />
    <circle cx="18" cy="6" r="3" fill="currentColor" />
    <rect x="3" y="11" width="8" height="2" rx="1" fill="currentColor" />
    <circle cx="12" cy="12" r="3" fill="currentColor" />
    <rect x="3" y="17" width="10" height="2" rx="1" fill="currentColor" />
    <circle cx="15" cy="18" r="3" fill="currentColor" />
  </svg></button>
            </div>
          </div>
        </div>{{/each}}

        <div tabindex="-1" data-modal-backdrop="static" id="parameter-modal" aria-hidden="true"
          class="hidden bg-black/60 transition-[visibility,opacity] overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ">
          <div class="relative p-4 w-1/2 max-w-2xl max-h-full">
            <div class="relative rounded-lg bg-white shadow">
              <!-- Header -->
              <div class="flex items-center justify-between p-4 pb-3">
                <h3 class="text-xl font-medium text-gray-900" id="modal-title">
                  Параметр статусини янгилаш
                </h3>
                <button type="button" class="ml-auto inline-flex items-center text-gray-400 hover:text-gray-500"
                  onclick="closeParameterModal()">
                  <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd"
                      d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                      clip-rule="evenodd"></path>
                  </svg>
                </button>
              </div>

              <form id="parameter-form" class="px-4">
                <input type="hidden" id="param-id" name="param_id">
                <input type="hidden" id="factory-id" name="factory_id">
                <input type="hidden" id="factory-param-id" name="factory_param_id">

                <div class="space-y-5 pb-5">
                  <div>
                    <label for="param-status" class="mb-2 block text-base font-normal text-gray-900">Статус</label>
                    <select id="param-status" name="status"
                      class="block w-full rounded-md border border-gray-300 bg-white p-2.5 text-base text-gray-900 focus:border-blue-500 focus:ring-blue-500">
                      <option value="1">Мавжуд</option>
                      <option value="0">Мавжуд эмас</option>
                    </select>
                  </div>
                  <div>
                    <label for="param-comment" class="mb-2 block text-base font-normal text-gray-900">Изоҳ</label>
                    <textarea id="param-comment" name="comment" rows="4"
                      class="block w-full rounded-md border border-gray-300 bg-white p-2.5 text-base text-gray-400 focus:border-blue-500 focus:ring-blue-500"
                      placeholder="Изоҳ киритинг..."></textarea>
                  </div>
                </div>

                <div class="border-t py-4 flex space-x-3">
                  <button style="background-color: #00a0c6;" type="submit"
                    class="rounded-md  px-6 py-2.5 text-center text-sm font-medium text-white hover:bg-blue-700 focus:outline-none">
                    Сақлаш
                  </button>
                  <button type="button" onclick="closeParameterModal()"
                    class="rounded-md border border-gray-300 bg-white px-6 py-2.5 text-sm font-medium text-gray-500 hover:bg-gray-100">
                    Бекор қилиш
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
        <!-- END: Users Layout -->
        <!-- BEGIN: Pagination -->
        <!--        <div class="intro-y col-span-12 flex flex-wrap items-center sm:flex-row sm:flex-nowrap">-->
        <!--            <nav class="w-full sm:mr-auto sm:w-auto">-->
        <!--                <ul class="flex w-full mr-0 sm:mr-auto sm:w-auto">-->
        <!--                    <li class="flex-1 sm:flex-initial">-->
        <!--                        <a class="transition duration-200 border items-center justify-center py-2 rounded-md cursor-pointer focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus-visible:outline-none dark:focus:ring-slate-700 dark:focus:ring-opacity-50 [&amp;:hover:not(:disabled)]:bg-opacity-90 [&amp;:hover:not(:disabled)]:border-opacity-90 [&amp;:not(button)]:text-center disabled:opacity-70 disabled:cursor-not-allowed min-w-0 sm:min-w-[40px] shadow-none font-normal flex border-transparent text-slate-800 sm:mr-2 dark:text-slate-300 px-1 sm:px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" data-lucide="chevrons-left" class="lucide lucide-chevrons-left stroke-1.5 h-4 w-4"><path d="m11 17-5-5 5-5"></path><path d="m18 17-5-5 5-5"></path></svg></a>-->
        <!--                    </li>-->
        <!--                    <li class="flex-1 sm:flex-initial">-->
        <!--                        <a class="transition duration-200 border items-center justify-center py-2 rounded-md cursor-pointer focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus-visible:outline-none dark:focus:ring-slate-700 dark:focus:ring-opacity-50 [&amp;:hover:not(:disabled)]:bg-opacity-90 [&amp;:hover:not(:disabled)]:border-opacity-90 [&amp;:not(button)]:text-center disabled:opacity-70 disabled:cursor-not-allowed min-w-0 sm:min-w-[40px] shadow-none font-normal flex border-transparent text-slate-800 sm:mr-2 dark:text-slate-300 px-1 sm:px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" data-lucide="chevron-left" class="lucide lucide-chevron-left stroke-1.5 h-4 w-4"><path d="m15 18-6-6 6-6"></path></svg></a>-->
        <!--                    </li>-->
        <!--                    <li class="flex-1 sm:flex-initial">-->
        <!--                        <a class="transition duration-200 border items-center justify-center py-2 rounded-md cursor-pointer focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus-visible:outline-none dark:focus:ring-slate-700 dark:focus:ring-opacity-50 [&amp;:hover:not(:disabled)]:bg-opacity-90 [&amp;:hover:not(:disabled)]:border-opacity-90 [&amp;:not(button)]:text-center disabled:opacity-70 disabled:cursor-not-allowed min-w-0 sm:min-w-[40px] shadow-none font-normal flex border-transparent text-slate-800 sm:mr-2 dark:text-slate-300 px-1 sm:px-3">...</a>-->
        <!--                    </li>-->
        <!--                    <li class="flex-1 sm:flex-initial">-->
        <!--                        <a class="transition duration-200 border items-center justify-center py-2 rounded-md cursor-pointer focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus-visible:outline-none dark:focus:ring-slate-700 dark:focus:ring-opacity-50 [&amp;:hover:not(:disabled)]:bg-opacity-90 [&amp;:hover:not(:disabled)]:border-opacity-90 [&amp;:not(button)]:text-center disabled:opacity-70 disabled:cursor-not-allowed min-w-0 sm:min-w-[40px] shadow-none font-normal flex border-transparent text-slate-800 sm:mr-2 dark:text-slate-300 px-1 sm:px-3">1</a>-->
        <!--                    </li>-->
        <!--                    <li class="flex-1 sm:flex-initial">-->
        <!--                        <a class="transition duration-200 border items-center justify-center py-2 rounded-md cursor-pointer focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus-visible:outline-none dark:focus:ring-slate-700 dark:focus:ring-opacity-50 [&amp;:hover:not(:disabled)]:bg-opacity-90 [&amp;:hover:not(:disabled)]:border-opacity-90 [&amp;:not(button)]:text-center disabled:opacity-70 disabled:cursor-not-allowed min-w-0 sm:min-w-[40px] shadow-none font-normal flex border-transparent text-slate-800 sm:mr-2 dark:text-slate-300 px-1 sm:px-3 !box dark:bg-darkmode-400">2</a>-->
        <!--                    </li>-->
        <!--                    <li class="flex-1 sm:flex-initial">-->
        <!--                        <a class="transition duration-200 border items-center justify-center py-2 rounded-md cursor-pointer focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus-visible:outline-none dark:focus:ring-slate-700 dark:focus:ring-opacity-50 [&amp;:hover:not(:disabled)]:bg-opacity-90 [&amp;:hover:not(:disabled)]:border-opacity-90 [&amp;:not(button)]:text-center disabled:opacity-70 disabled:cursor-not-allowed min-w-0 sm:min-w-[40px] shadow-none font-normal flex border-transparent text-slate-800 sm:mr-2 dark:text-slate-300 px-1 sm:px-3">3</a>-->
        <!--                    </li>-->
        <!--                    <li class="flex-1 sm:flex-initial">-->
        <!--                        <a class="transition duration-200 border items-center justify-center py-2 rounded-md cursor-pointer focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus-visible:outline-none dark:focus:ring-slate-700 dark:focus:ring-opacity-50 [&amp;:hover:not(:disabled)]:bg-opacity-90 [&amp;:hover:not(:disabled)]:border-opacity-90 [&amp;:not(button)]:text-center disabled:opacity-70 disabled:cursor-not-allowed min-w-0 sm:min-w-[40px] shadow-none font-normal flex border-transparent text-slate-800 sm:mr-2 dark:text-slate-300 px-1 sm:px-3">...</a>-->
        <!--                    </li>-->
        <!--                    <li class="flex-1 sm:flex-initial">-->
        <!--                        <a class="transition duration-200 border items-center justify-center py-2 rounded-md cursor-pointer focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus-visible:outline-none dark:focus:ring-slate-700 dark:focus:ring-opacity-50 [&amp;:hover:not(:disabled)]:bg-opacity-90 [&amp;:hover:not(:disabled)]:border-opacity-90 [&amp;:not(button)]:text-center disabled:opacity-70 disabled:cursor-not-allowed min-w-0 sm:min-w-[40px] shadow-none font-normal flex border-transparent text-slate-800 sm:mr-2 dark:text-slate-300 px-1 sm:px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" data-lucide="chevron-right" class="lucide lucide-chevron-right stroke-1.5 h-4 w-4"><path d="m9 18 6-6-6-6"></path></svg></a>-->
        <!--                    </li>-->
        <!--                    <li class="flex-1 sm:flex-initial">-->
        <!--                        <a class="transition duration-200 border items-center justify-center py-2 rounded-md cursor-pointer focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus-visible:outline-none dark:focus:ring-slate-700 dark:focus:ring-opacity-50 [&amp;:hover:not(:disabled)]:bg-opacity-90 [&amp;:hover:not(:disabled)]:border-opacity-90 [&amp;:not(button)]:text-center disabled:opacity-70 disabled:cursor-not-allowed min-w-0 sm:min-w-[40px] shadow-none font-normal flex border-transparent text-slate-800 sm:mr-2 dark:text-slate-300 px-1 sm:px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" data-lucide="chevrons-right" class="lucide lucide-chevrons-right stroke-1.5 h-4 w-4"><path d="m6 17 5-5-5-5"></path><path d="m13 17 5-5-5-5"></path></svg></a>-->
        <!--                    </li>-->
        <!--                </ul>-->
        <!--            </nav>-->
        <!--            <select class="disabled:bg-slate-100 disabled:cursor-not-allowed disabled:dark:bg-darkmode-800/50 [&amp;[readonly]]:bg-slate-100 [&amp;[readonly]]:cursor-not-allowed [&amp;[readonly]]:dark:bg-darkmode-800/50 transition duration-200 ease-in-out text-sm border-slate-200 shadow-sm rounded-md py-2 px-3 pr-8 focus:ring-4 focus:ring-primary focus:ring-opacity-20 focus:border-primary focus:border-opacity-40 dark:bg-darkmode-800 dark:border-transparent dark:focus:ring-slate-700 dark:focus:ring-opacity-50 group-[.form-inline]:flex-1 !box mt-3 w-20 sm:mt-0">-->
        <!--                <option>10</option>-->
        <!--                <option>25</option>-->
        <!--                <option>35</option>-->
        <!--                <option>50</option>-->
        <!--            </select>-->
        <!--        </div>-->
        <!-- END: Pagination -->
      </div>
      <!-- BEGIN: Control Parameter Modal -->
      <div data-tw-backdrop='' aria-hidden="true" tabindex='-1' id='parameter-control-modal'
         class='modal group bg-black/60 transition-[visibility,opacity] w-screen h-screen fixed left-0 top-0 [&amp;:not(.show)]:duration-[0s,0.2s] [&amp;:not(.show)]:delay-[0.2s,0s] [&amp;:not(.show)]:invisible [&amp;:not(.show)]:opacity-0 [&amp;.show]:visible [&amp;.show]:opacity-100 [&amp;.show]:duration-[0s,0.4s]'>
        <div
          class='w-[90%] mx-auto bg-white relative rounded-md shadow-md transition-[margin-top,transform] duration-[0.4s,0.3s] -mt-16 group-[.show]:mt-16 group-[.modal-static]:scale-[1.05] dark:bg-darkmode-600 sm:w-[460px]'>
          <div class='p-5 text-center'>

            <div class='text-3xl'>Лойиҳа Параметрларини Бошкариш</div>
            <div class='mt-2 text-slate-500' id='control-parameter-modal-result'>

            </div>
          </div>

        </div>
      </div>
      <!-- END: Control Parameter Modal -->

      <!-- BEGIN: Create Factory Modal -->
      <div data-tw-backdrop='' aria-hidden='true' tabindex='-1' id='factory-create-modal'
        class='modal group bg-black/60 transition-[visibility,opacity] w-screen h-screen fixed left-0 top-0 [&amp;:not(.show)]:duration-[0s,0.2s] [&amp;:not(.show)]:delay-[0.2s,0s] [&amp;:not(.show)]:invisible [&amp;:not(.show)]:opacity-0 [&amp;.show]:visible [&amp;.show]:opacity-100 [&amp;.show]:duration-[0s,0.4s]'>
        <div
          class='w-[90%] mx-auto bg-white relative rounded-md shadow-md transition-[margin-top,transform] duration-[0.4s,0.3s] -mt-12 group-[.show]:mt-12 group-[.modal-static]:scale-[1.05] dark:bg-darkmode-600 sm:w-[850px]'>
          <div class='p-2 text-center'>

            <div id="factory-create-modal-title" class=' text-3xl'></div>
            <div class='mt-2 text-slate-500' id='factory-create-modal-result'>

            </div>
          </div>

        </div>
      </div>
      <!-- END: Create Factory Modal -->

      <!-- BEGIN: Edit Factory Modal -->
      <div data-tw-backdrop='' aria-hidden='true' tabindex='-1' id='factory-edit-modal'
        class='modal group bg-black/60 transition-[visibility,opacity] w-screen h-screen fixed left-0 top-0 [&amp;:not(.show)]:duration-[0s,0.2s] [&amp;:not(.show)]:delay-[0.2s,0s] [&amp;:not(.show)]:invisible [&amp;:not(.show)]:opacity-0 [&amp;.show]:visible [&amp;.show]:opacity-100 [&amp;.show]:duration-[0s,0.4s]'>
        <div
          class='w-[90%] mx-auto bg-white relative rounded-md shadow-md transition-[margin-top,transform] duration-[0.4s,0.3s] -mt-12 group-[.show]:mt-12 group-[.modal-static]:scale-[1.05] dark:bg-darkmode-600 sm:w-[850px]'>
          <div class='p-2 text-center'>

            <div id="factory-edit-modal-title" class=' text-3xl'></div>
            <div class='mt-2 text-slate-500' id='factory-edit-modal-result'>

            </div>
          </div>

        </div>
      </div>
      <!-- END: Edit Factory Modal -->

      <!-- BEGIN: Parameter history comment Modal -->
      <div data-tw-backdrop='' aria-hidden='true' tabindex='-1' id='factory-history-modal'
        class='modal group bg-black/60 transition-[visibility,opacity] w-screen h-screen fixed left-0 top-0 [&amp;:not(.show)]:duration-[0s,0.2s] [&amp;:not(.show)]:delay-[0.2s,0s] [&amp;:not(.show)]:invisible [&amp;:not(.show)]:opacity-0 [&amp;.show]:visible [&amp;.show]:opacity-100 [&amp;.show]:duration-[0s,0.4s]'>
        <div
          class='w-[90%] mx-auto bg-white relative rounded-md shadow-md transition-[margin-top,transform] duration-[0.4s,0.3s] -mt-16 group-[.show]:mt-16 group-[.modal-static]:scale-[1.05] dark:bg-darkmode-600 sm:w-[460px]'>
          <div class='p-5 text-center'>

            <div id="factory-history-modal-title" class='mt-5 text-3xl'></div>
            <div class='mt-2 text-slate-500' id='factory-history-modal-result'>

            </div>
          </div>

        </div>
      </div>
      <!-- END: Paramter history comment Modal -->
      {{!-- {{> modal}} --}}
    </div>

  </div>
</div>
<script>
  function parseJwt(token) {
  if (!token) return null;

  try {
    const base64Url = token.split('.')[1]; // payload
    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');

    const jsonPayload = decodeURIComponent(
      atob(base64)
        .split('')
        .map(c => '%' + c.charCodeAt(0).toString(16).padStart(2, '0'))
        .join('')
    );

    return JSON.parse(jsonPayload);
  } catch (e) {
    console.error('Token decode xatoligi:', e);
    return null;
  }
}
</script>
<script>
  function createFactory() {
    const modal = document.getElementById('factory-create-modal-result');
    modal.innerHTML = null;
    fetch('/factory/create', {
      method: 'GET'
    }).then(response => response.text()).then(data => {
      modal.innerHTML = data;
      const modalTitle = document.getElementById('factory-create-modal-title');
      modalTitle.textContent = `Янги лойиҳа қўшиш`;
       setTimeout(() => {
                initializeMap();
            }, 300);

            document.querySelector('#factory-create-modal-form').addEventListener('submit', function save_create_factory(e) {
    e.preventDefault()
      const input = document.getElementById('regular-form-element');
    const form = e.target;
    const elements = input.value.split(',').map(el => el.trim()).filter(Boolean);
            const latitude = document.getElementById('latitude').value;
            const longitude = document.getElementById('longitude').value;

            const formData = new FormData(form);
                formData.delete('elements'); // eski 'elements' ni o‘chirib tashlash

elements.forEach(el => formData.append('elements[]', el));
            const saveButton = document.querySelector('.btn-success');
            const originalText = saveButton.textContent;
            saveButton.textContent = '⏳ Сақланмоқда...';
            saveButton.disabled = true;
    fetch('/factory/create', { method: 'POST', body: formData })
      .then(response => {
        if (!response.ok) {
          throw new Error(`Network response was
  not ok`);
        } return response.text();
      }).then(data => {
        document.getElementById('factory-create-modal').classList.remove('show');
        location.reload();
      }).catch(error => {
        console.error(`There was a problem
  with the fetch operation:`, error);
      }) .finally(() => {
                // Loading holatini qaytarish
                saveButton.textContent = originalText;
                saveButton.disabled = false;
            });;
  })
    }).catch(error => { 
      console.log(error);
    });
  }

        function updateCoordinates(lat, lng) {
            document.getElementById('latitude').value = lat.toFixed(6);
            document.getElementById('longitude').value = lng.toFixed(6);
            
            document.getElementById('display-lat').textContent = lat.toFixed(6);
            document.getElementById('display-lng').textContent = lng.toFixed(6);
            document.getElementById('coordinates-display').style.display = 'block';
        }

 // Modal tashqarisiga bosilganda yopish
        window.onclick = function(event) {
            const modal = document.getElementById('factory-create-modal');
            if (event.target === modal) {
                closeModal();
            }
        }

        // ESC tugmasi bilan yopish
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                const modal = document.getElementById('factory-create-modal');
                if (modal.classList.contains('show')) {
                    closeModal();
                }
            }
        });

        // Sahifa yuklanganda
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 Sahifa yuklandi. MapLibre tayyor.');
        });

function initializeMap() {
    const map = new maplibregl.Map({
        container: 'map',
        style: 'https://api.maptiler.com/maps/019644f4-f546-7d75-81ed-49e8e52c20c7/style.json?key=Ql4Zhf4TMUJJKxx8Xht6',
        center: [69.2401, 41.2995],
        zoom: 10
    });

 let marker = new maplibregl.Marker({ draggable: true })
        .setLngLat([69.2401, 41.2995])
        .addTo(map);
          document.getElementById('latitude').value = 41.2995;
    document.getElementById('longitude').value = 69.2401;

    map.on('click', function (e) {
        const lng = e.lngLat.lng;
        const lat = e.lngLat.lat;

        if (marker) {
            marker.remove();
        }

        marker = new maplibregl.Marker({ draggable: true })
            .setLngLat([lng, lat])
            .addTo(map);

        document.getElementById('latitude').value = lat;
        document.getElementById('longitude').value = lng;

        marker.on('dragend', function() {
            const lngLat = marker.getLngLat();
            document.getElementById('latitude').value = lngLat.lat;
            document.getElementById('longitude').value = lngLat.lng;
        });
    });
}

  function showFactoryEditModal(id) {
    const modal = document.getElementById('factory-edit-modal-result');
    modal.innerHTML = null;
    fetch('/factory/update/' + id, {
      method:
        'GET'
    }).then(response => response.text()).then(data => {
      modal.innerHTML = data;
      const modalTitle = document.getElementById('factory-edit-modal-title');
      modalTitle.textContent = `Лойиҳа маълумотларини ўзгартириш`;
       setTimeout(() => {
                initializeMap();
            }, 300);
     document.querySelector('#factory-edit-modal-form').addEventListener('submit', function save_create_factory(e) {
    e.preventDefault()
      const input = document.getElementById('regular-form-edit-element');
    const form = e.target;
    const elements = input.value.split(',').map(el => el.trim()).filter(Boolean);
            const latitude = document.getElementById('latitude').value;
            const longitude = document.getElementById('longitude').value;
            console.log(id, 'name')

            const formData = new FormData(form);
            formData.append('factory_id', id);
                formData.delete('elements'); // eski 'elements' ni o‘chirib tashlash

    elements.forEach(el => formData.append('elements[]', el));
            const saveButton = document.querySelector('.btn-success');
            const originalText = saveButton.textContent;
            saveButton.textContent = '⏳ Сақланмоқда...';
            saveButton.disabled = true;
    fetch('/factory/update/'+id, { method: 'PUT', body: formData })
      .then(response => {
        if (!response.ok) {
          throw new Error(`Network response was
  not ok`);
        } return response.text();
      }).then(data => {
        document.getElementById('factory-create-modal').classList.remove('show');
        location.reload();
      }).catch(error => {
        console.error(`There was a problem
  with the fetch operation:`, error);
      }) .finally(() => {
                // Loading holatini qaytarish
                saveButton.textContent = originalText;
                saveButton.disabled = false;
            });;
  })
    }).catch(error => { 
      console.log(error);
    });
  }
  function save_update_factory(factory_id) {
    var form = document.querySelector('#factory-edit-modal form');

    var formData = new
      FormData(form); formData.append('factory_id', factory_id);
    fetch('/factory/update/' + factory_id, { method: 'PUT', body: formData })
      .then(response => {
        if (!response.ok) {
          throw new Error(`Network response was
  not ok`);
        } return response.text();
      }).then(data => {
        document.getElementById('factory-edit-modal').classList.remove('show');
        location.reload();
      }).catch(error => {
        console.error(`There was a problem
  with the fetch operation:`, error);
      });
  }

</script>

<script>
  const token = localStorage.getItem('token'); 
  const decodedToken = parseJwt(token);
if (decodedToken.user.role === 'admin') {
    const editButtons = document.querySelectorAll('#parameter-edit-btn');
    const createButtons = document.querySelector('#create-factory-btn');
    editButtons.forEach(button => {
        button.style.display = 'none'; 
    });
    createButtons.style.display = 'none'; 
}

  

</script>

<script>
  function formatDate(dateString) {
    const date = new Date(dateString);
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0'); // 0-based
    const year = date.getFullYear();

    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');

    return `${day}.${month}.${year} ${hours}:${minutes}`;
  }

  function showCommentHistory(factoryParamId) {
    const modal = document.getElementById('factory-history-modal');
    const modalTitle = document.getElementById('factory-history-modal-title');
    const modalResult = document.getElementById('factory-history-modal-result');
    modalResult.innerHTML = null;

    fetch(`/factory/log-history?query[factoryParamId]=${factoryParamId}`)
      .then(response => response.text())
      .then(data => {
        modalResult.innerHTML = data;
        modalTitle.textContent = `Параметр тарихи:`;
        modal.classList.add('show');
        const elements = document.querySelectorAll('.param-date');
        elements.forEach(el => {
          const originalDate = el.getAttribute('data-raw')
          console.log(formatDate(originalDate), 'originalDate');
          if (originalDate) {
            el.textContent = formatDate(originalDate);
          }
        });
      })
      .catch(error => {
        console.error('Error fetching parameter history:', error);
      });
  }
</script>

<script>
  function showParametrControlModal(factoryId) {
    const modal = document.getElementById('parameter-control-modal');
    const modalFactory = document.getElementById('control-parameter-modal-result');
    modalFactory.innerHTML = null
    const paramLogs = fetch(`/factory/param-control/${factoryId}`)
      .then(response => response.text())
      .then(data => {
        modalFactory.innerHTML = data;
      });
    

  }
  
    function save_update_parametr(factoryId) {
      const form = document.querySelector('#parameter-control-modal-form');
      const switches = document.querySelectorAll('#parameter-control-modal-form input[type="checkbox"]');

      const activeParams = [];
      switches.forEach((checkbox) => {
        const paramId = checkbox.dataset.paramId;
        const isChecked = checkbox.checked;

        activeParams.push({
          id: parseInt(paramId),
          visible: isChecked
        });
      });

      fetch('/factory/param-control/' + factoryId, {
        method: 'PUT',
        headers: {
        'Content-Type': 'application/json'
        },
        body: JSON.stringify({ params: activeParams })
      }).then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.text();
      }).then(data => {
        document.getElementById('factory-edit-modal').classList.remove('show');
        location.reload();
      }).catch(error => {
        console.error('There was a problem with the fetch operation:', error);
      });
    }
    
</script>
<script>
  
  function showParameterModal(factoryId, paramId, paramName, type, factoryParamId, status) {
    const modal = document.getElementById('parameter-modal');
    const modalTitle = document.getElementById('modal-title');
    const paramIdInput = document.getElementById('param-id');
    const factoryIdInput = document.getElementById('factory-id');
    const factoryParamIdInput = document.getElementById('factory-param-id');

    const paramLogs = fetch(`/factory/param/${factoryParamId}`)
      .then(response => response.json())
      .then(data => {
        const item = data;
        const statusContainer = document.getElementById('param-status').parentElement;

        const existingField = document.getElementById('param-status');
        if (existingField) {
          existingField.remove();
        }

        let newField;

        if (type === 'date') {
          newField = document.createElement('input');
          newField.type = 'date';
          newField.name = 'status';
          newField.id = 'param-status';
          newField.className = 'block w-full rounded-md border border-gray-300 bg-white p-2.5 text-base text-gray-900 focus:border-blue-500 focus:ring-blue-500';

          if (item) {
            const findParamLogs = fetch(`/factory/log?query[factoryParamId]=${factoryParamId}`)
              .then(response => response.json()).then(data => {
                const dateValue = new Date();
                if (!isNaN(dateValue.getTime())) {
                  newField.value = dateValue.toISOString().split('T')[0];
                }
              })
          } else {
            newField.value = new Date().toISOString().split('T')[0];
          }
        } else {
          newField = document.createElement('select');
          newField.name = 'status';
          newField.id = 'param-status';
          newField.className = 'block w-full rounded-md border border-gray-300 bg-white p-2.5 text-base text-gray-900 focus:border-blue-500 focus:ring-blue-500';

          const option1 = document.createElement('option');
          option1.value = '1';
          option1.textContent = 'Мавжуд';
          newField.appendChild(option1);

          const option2 = document.createElement('option');
          option2.value = '0';
          option2.textContent = 'Мавжуд эмас';
          newField.appendChild(option2);

          newField.value = item.status;

        }
        statusContainer.appendChild(newField);
        const commentTextarea = document.getElementById('param-comment');
        if (item && item.izoh) {
          commentTextarea.value = item.izoh;
        } else {
          commentTextarea.value = '';
        }
      })
      .catch(error => {
        console.error('Error fetching parameter logs:', error);

        if (existingField) {
          existingField.remove();
        }
      });

    modalTitle.textContent = `Параметр статусини янгилаш: ${paramName}`;
    paramIdInput.value = paramId;
    factoryIdInput.value = factoryId;
    factoryParamIdInput.value = factoryParamId;

    const statusContainer = document.getElementById('param-status');

    modal.classList.remove('hidden');
    modal.classList.add('flex');
  }

  function closeParameterModal() {
    const modal = document.getElementById('parameter-modal');
    modal.classList.remove('flex');
    modal.classList.add('hidden');
  }

  document.getElementById('parameter-form').addEventListener('submit', function (e) {
    e.preventDefault();
    const form = this;
    const formData = new FormData(this);
    const factoryId = formData.get('factory_id');
    const factoryParamId = formData.get('factory_param_id');
    const paramId = formData.get('param_id');
    const status = formData.get('status');
    const comment = formData.get('comment');
    if(status.length < 2) {
      fetch('/factory/param/update/' + factoryParamId, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ status: status })
    }).then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    }).then(data => {
      const img = document.getElementById(`${factoryParamId}`);
      if (img) {
        if (+data.data.status === 0) {
          img.src = '../../../public/image/error.png';
        } else if (+data.data.status === 1) {
          img.src = '../../../public/image/ok.png';
        } else {
          img.src = `../../../public/image/${data.data.status}.png`;
        }
      }
    }).catch(error => {
      console.error('Error updating parameter:', error);
    });
    }
    fetch('/factory/log', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        factory_id: factoryId,
        params_id: paramId,
        factory_params_id: factoryParamId,
        value: status,
        izoh: comment || null,
        date_update: new Date().toISOString()
      })
    })
      .then(response => {
        if (response.ok) {
          return response.json();
        }
        throw new Error('Network response was not ok');
      })
      .then(data => {
        const paramComment = document.querySelector(`[data-param-id="${factoryParamId}"]`);
        const paramDate = document.querySelector(`#factory-param-date-${factoryParamId}`);
        if (status.length > 2) {
          if (paramDate) {
            paramDate.textContent = status;
            paramDate.classList.remove('d-none'); 
            paramDate.style.display = 'inline'; 
          }
        } else {
          if (paramDate) {
            paramDate.textContent = '';
            paramDate.classList.add('d-none'); 
            paramDate.style.display = 'none';
          }
        }
        if(paramComment && data.data?.izoh){  
          paramComment.classList.add('flex');
          paramComment.classList.remove('hidden');
          paramComment.textContent = `Izoh: ${data.data?.izoh}`;
        }if(paramComment && !data.data?.izoh){
          paramComment.classList.add('hidden');
          paramComment.classList.remove('flex');
        }
        form.reset();
        updateParameterStatus(paramId, status);
        closeParameterModal();
        showNotification('Параметр статуси муваффақиятли янгиланди', 'success');
      })
      .catch(error => {
        console.error('Error:', error);
        showNotification('Хатолик юз берди. Илтимос, қайтадан уриниб кўринг.', 'error');
      });
  });

  function updateParameterStatus(paramId, status) {
    const paramElement = document.querySelector(`[data-param-id="${paramId}"]`);
    if (paramElement) {
      const statusImgElement = paramElement.querySelector('img');
      if (statusImgElement) {
        statusImgElement.src = status === "1" ? '../../../public/image/ok.png' : '../../../public/image/error.png';
      }
    }
  }

  function showNotification(message, type) {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg text-white ${type === 'success' ? 'bg-green-500' : 'bg-red-500'} shadow-lg z-50`;
    notification.textContent = message;

    // Append to body
    document.body.appendChild(notification);

    // Remove after 3 seconds
    setTimeout(() => {
      notification.remove();
    }, 3000);
  }
</script>